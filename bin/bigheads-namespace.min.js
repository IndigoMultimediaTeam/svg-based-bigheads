const SVGBigHeads=function(){"use strict";const{colors:t,safe_layers:e,parts:r}=JSON.parse('{"colors":{"hair":"#d96e27","clothes":"#d67070","hat":"#5bcaf0","mouth":"#dd3e3e","skin":"#fdd2b2"},"safe_layers":["base","eyes","clothes",["facialhair","eyebrow"],"mouth",["nose","breasts","accessory","hat"]],"parts":{"accessory":["none","glasses","pincenez","sunglasses"],"breasts":["none","breasts"],"eyebrow":["none","angry","neutral","smiling"],"facialhair":["none","big","stubble"],"hair":{"none":{"front":true},"afro":{"front":true,"top":true},"balding":{"front":true},"bob":{"front":true},"bold":{"front":true},"bun":{"front":true,"top":true},"buzz":{"front":true},"long":{"front":true},"long01":{"back":true,"parent":"long"},"long02":{"back":true,"parent":"long"},"long03":{"back":true,"parent":"long"},"mohawk":{"top":true},"serious":{"front":true},"short":{"front":true},"simple":{"front":true},"stubble":{"front":true}},"hat":["none","beanie","turban"],"nose":["none","big","normal","up"],"base":["base"],"clothes":["dressshirt","tanktop","tshirt","vneck"],"eyes":["narrower","round","semiround","simple","thin"],"mouth":["lips","neutral","open","smile"]}}'),s={attributes_default:{href:""},get attributes_keys(){return Object.keys(this.attributes_default)},attributes_nullable:[],attributes_objectbased:[],storage:new WeakMap,create(t){const e=JSON.parse(JSON.stringify(this.attributes_default));this.storage.set(t,{attributes:e,els:{}})},get(t){return this.storage.get(t)},setAttribute(t,e,r=null){return Reflect.set(t.attributes,e,null===r?this.attributes_default[e]:r)},getAttribute:({attributes:t},e)=>t[e],hasElement:(t,e)=>Reflect.has(t.els,e),getElement:(t,e)=>Reflect.get(t.els,e),setElement:(t,e,r)=>Reflect.set(t.els,e,r),deleteElement:({els:t},e)=>!!Reflect.has(t,e)&&(Reflect.get(t,e).remove(),Reflect.deleteProperty(t,e))};for(let t,e=0,n=Object.keys(r);t=n[e];e++){const e=Reflect.get(r,t);let n;Array.isArray(e)?-1!==(n=e).indexOf("none")&&s.attributes_nullable.push(t):(n=Object.keys(e),s.attributes_objectbased.push(t)),Reflect.set(s.attributes_default,t,n[0])}const n={options:{allow:!0,fit:"contain",big_hat:"bigheads-hat-longhairs"},is_created:!1,create(){if(!this.options.allow||this.is_created)return!1;const t=document.createElement("style"),{fit:e,big_hat:r}=this.options;t.innerHTML=`svg-bigheads svg { all: unset; width: 100%; height: 100%; object-fit: ${e}; }`+`svg-bigheads .${r} { transform: scale(1.1) translate(-5%, -7.5%); }`,document.head.appendChild(t),this.is_created=!0}},i=document.createElementNS.bind(document,"http://www.w3.org/2000/svg");const a=(t,e)=>t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",e);function o(t){const e=i("use");return a(e,t),e}function u(t,e,r,n=s.getAttribute(t,r)){return`${e}#${r}-${n}`}function l(t,r){for(let i,a,o=0;a=e[o];o++){if(!Array.isArray(a)){i=a;continue}const e=a.indexOf(r);if(-1!==e)return s.getElement(t,n(a,e)||i)}function n(e,r){if(0===r)return!1;for(let n,i=r-1;i>=0;i--)if(n=e[i],s.hasElement(t,n))return n;return!1}}class c extends HTMLElement{constructor(){super(),s.create(this),n.create()}static get observedAttributes(){return s.attributes_keys}attributeChangedCallback(t,e,r){if(r===e)return!1;s.setAttribute(s.get(this),t,r),this.update(t)}connectedCallback(){this._svg=this.appendChild(function(){const t=i("svg");return t.setAttribute("viewBox","0 0 1000 990"),t}());const t=s.get(this),r=s.getAttribute(t,"href");e.forEach(e=>{if(!Array.isArray(e))return this.appendUSE(t,e,r);e.forEach(e=>{if("none"!==s.getAttribute(t,e))return this.appendUSE(t,e,r)})}),this.updateHair(t,r)}appendUSE(t,e,r){const n=o(u(t,r,e));return s.setElement(t,e,this._svg.appendChild(n)),n}insertAfterUSE(t,e,r,n){const i=o(u(t,r,e));return s.setElement(t,e,this._svg.insertBefore(i,n.nextElementSibling)),i}update(t){if(!this._svg)return!1;const e=s.get(this);if("href"===t)return Reflect.set(e,"els",{}),this._svg.remove(),this.connectedCallback();const r=s.getAttribute(e,"href");if("hair"===t)return this.updateHair(e,r);const n=()=>"hat"===t&&this.updateHair(e,r),i=s.getAttribute(e,t);return"none"===i?n(s.deleteElement(e,t)):-1!==s.attributes_nullable.indexOf(t)?n(this.insertAfterUSE(e,t,r,l(e,t))):n(a(s.getElement(e,t),u(e,r,t,i)))}updateHair(t,e){const i=s.getAttribute(t,"hair");s.deleteElement(t,"hair");const a="none"!==s.getAttribute(t,"hat"),c=e=>a&&s.getElement(t,"hat").classList.toggle(n.options.big_hat,e);if("none"===i)return c(0);const h=function(t){const e=r.hair[t];return Object.assign({},e,e.parent?r.hair[e.parent]:null)}(i),b=Object.keys(h).reduce(function(r,s){return"parent"===s||!h[s]||"top"===s&&a||Reflect.set(r,s,o(u(t,e,"hair",(h.parent&&"front"===s?h.parent:i)+"-"+s))),r},{});return Object.keys(b).forEach(e=>"front"===e?this._svg.insertBefore(b[e],l(t,"accessory")):this._svg.insertBefore(b[e],s.getElement(t,"base"))),s.setElement(t,"hair",function(t){const e=Object.keys(t);return Object.assign({remove(){e.forEach(t=>this[t].remove())}},t)}(b)),c(Reflect.has(b,"back"))}}return s.attributes_keys.forEach(t=>Reflect.defineProperty(c.prototype,t,{get(){return this.getAttribute(t)},set(e){return this.setAttribute(t,e)}})),customElements.define("svg-bigheads",c),{}}();