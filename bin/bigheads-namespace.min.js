const SVGBigHeads=function(){"use strict";const{colors:t,safe_layers:e,parts:r}=JSON.parse('{"colors":{"hair":"#d96e27","clothes":"#d67070","hat":"#5bcaf0","mouth":"#dd3e3e","skin":"#fdd2b2"},"safe_layers":["base","eyes","clothes",["facialhair","eyebrow"],"mouth",["nose","breasts","hat","glasses"]],"parts":{"glasses":["none","big","pincenez","sun"],"breasts":["none","breasts"],"eyebrow":["none","angry","neutral","smiling"],"facialhair":["none","big","stubble"],"hair":{"none":{"front":true},"afro":{"front":true,"top":true},"balding":{"front":true},"bob":{"front":true},"bold":{"front":true},"bun":{"front":true,"top":true},"buzz":{"front":true},"long":{"front":true},"long01":{"back":true,"parent":"long"},"long02":{"back":true,"parent":"long"},"long03":{"back":true,"parent":"long"},"mohawk":{"top":true},"serious":{"front":true},"short":{"front":true},"simple":{"front":true},"stubble":{"front":true}},"hat":["none","beanie","turban"],"nose":["none","big","normal","up"],"base":["base"],"clothes":["dressshirt","tanktop","tshirt","vneck"],"eyes":["narrower","round","semiround","simple","thin"],"mouth":["lips","neutral","open","smile"]}}'),n=document.createElementNS.bind(document,"http://www.w3.org/2000/svg");function s(){const t=n("svg");return t.setAttribute("viewBox","0 0 1000 990"),t}const i=(t,e)=>t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",e);function a(t){const e=n("use");return i(e,t),e}function o(t,e){class r extends t{static get observedAttributes(){return e}}return e.forEach(t=>Reflect.defineProperty(r.prototype,t,{get(){return this.getAttribute(t)},set(e){return this.setAttribute(t,e)}})),r}const u=function(){const{attributes_default:t,attributes_keys:e,attributes_nullable:n,attributes_objectbased:s}=function(){const t={href:""},e=[],n=[];for(let s,i=0,a=Object.keys(r);s=a[i];i++){const i=Reflect.get(r,s);let a;Array.isArray(i)?-1!==(a=i).indexOf("none")&&e.push(s):(a=Object.keys(i),n.push(s)),Reflect.set(t,s,a[0])}const s=Object.keys(t);return{attributes_default:t,attributes_keys:s,attributes_nullable:e,attributes_objectbased:n}}(),i=new WeakMap;function a(t){return-1!==s.indexOf(t)}return{attributes_default:t,attributes_keys:e,isNullable:t=>-1!==n.indexOf(t),isFromMultiplePieces:a,getNextPartName(t,e,n=1){const s=Reflect.get(r,t),i=a(t)?Object.keys(s).filter(t=>"long"!==t):s;return i[(o=i.indexOf(e),u=n,l=i.length,(l+o+u%l)%l)];var o,u,l},get:e=>i.has(e)?i.get(e):function(e){const r=JSON.parse(JSON.stringify(t));return i.set(e,{attributes:r,els:{}}),i.get(e)}(e),setAttribute:({attributes:e},r,n=null)=>Reflect.set(e,r,n||t[r]),getAttribute:({attributes:t},e)=>t[e],hasElement:(t,e)=>Reflect.has(t.els,e),getElement:(t,e)=>Reflect.get(t.els,e),setElement:(t,e,r)=>Reflect.set(t.els,e,r),deleteElement:({els:t},e)=>!!Reflect.has(t,e)&&(Reflect.get(t,e).remove(),Reflect.deleteProperty(t,e))}}();function l(t,e,r=u.getAttribute(t,e)){return`${u.getAttribute(t,"href")}#${e}-${r}`}function c(t,r){for(let s,i,a=0;i=e[a];a++){if(!Array.isArray(i)){s=i;continue}const e=i.indexOf(r);if(-1!==e)return u.getElement(t,n(i,e)||s)}function n(e,r){if(0===r)return!1;for(let n,s=r-1;s>=0;s--)if(n=e[s],u.hasElement(t,n))return n;return!1}}function f(t){const e=r.hair[t],n=(t,e,r={})=>Object.keys(t).filter(e=>"parent"!==e&&Boolean(t[e])).reduce((t,r)=>Reflect.set(t,r,e+"-"+r)&&t,r);let s=n(e,t);return e.parent&&(s=n(r.hair[e.parent],e.parent,s)),s}const b={options:{allow:!0,fit:"contain",big_hat:"bigheads-hat-longhairs"},is_created:!1,create(){if(!this.options.allow||this.is_created)return!1;const t=document.createElement("style"),{fit:e,big_hat:r}=this.options;t.innerHTML=`svg-bigheads svg, svg-bigheads-part svg { all: unset; width: 100%; height: 100%; object-fit: ${e}; }`+`svg-bigheads .${r} { transform: scale(1.1) translate(-5%, -7.5%); }`,document.head.appendChild(t),this.is_created=!0}};function h(t,e){const r=u.getAttribute(e,"hair");u.deleteElement(e,"hair");const n="none"!==u.getAttribute(e,"hat"),s=t=>n&&u.getElement(e,"hat").classList.toggle(b.options.big_hat,t);if("none"===r)return s(0);const i=f(r),o=Object.keys(i).reduce(function(t,r){return"top"===r&&n||Reflect.set(t,r,a(l(e,"hair",i[r]))),t},{});return Object.keys(o).forEach(r=>"front"===r?t.insertBefore(o[r],c(e,"hat")):t.insertBefore(o[r],u.getElement(e,"base"))),u.setElement(e,"hair",function(t){const e=Object.keys(t);return Object.assign({remove(){e.forEach(t=>this[t].remove())}},t)}(o)),s(Reflect.has(o,"back"))}const g=function(){const t=new WeakMap;return{create(e){const r=e.appendChild(s());return t.set(e,r),r},get:e=>t.get(e),appendUSE(t,e,r){const n=a(l(e,r));return u.setElement(e,r,t.appendChild(n)),n},insertAfterUSE(t,e,r,n){const s=a(l(e,r));return u.setElement(e,r,t.insertBefore(s,n.nextElementSibling)),s},avatarPartHref:(t,e,r=u.getAttribute(t,e))=>`${u.getAttribute(t,"href")}#${e}-${r}`,remove(e){t.get(e).remove(),Reflect.deleteProperty(t,e)}}}();class d extends(o(HTMLElement,u.attributes_keys)){static get tag_name(){return"svg-bigheads"}constructor(){super(),b.create()}attributeChangedCallback(t,e,r){return r!==e&&(u.setAttribute(u.get(this),t,r),this.update(t),!0)}connectedCallback(){const t=g.create(this),r=u.get(this),n=g.appendUSE.bind(null,t,r);e.forEach(t=>{if(!Array.isArray(t))return n(t);t.forEach(t=>{if("none"!==u.getAttribute(r,t))return n(t)})}),h(t,r)}update(t){const e=g.get(this);if(!e)return!1;const r=u.get(this);if("href"===t)return Reflect.set(r,"els",{}),g.remove(this),this.connectedCallback();if(u.isFromMultiplePieces(t))return h(e,r);const n=()=>"hat"===t&&h(e,r),s=u.getAttribute(r,t);return"none"===s?n(u.deleteElement(r,t)):u.isNullable(t)&&!u.hasElement(r,t)?n(g.insertAfterUSE(e,r,t,c(r,t))):n(i(u.getElement(r,t),l(r,t,s)))}}customElements.define(d.tag_name,d);class p extends(o(HTMLElement,["href","type","value"])){static get tag_name(){return d.tag_name+"-part"}constructor(){super(),b.create()}attributeChangedCallback(t,e,r){return"type"!==t&&(!(!this._svg||r===e)&&this.connectedCallback())}connectedCallback(){const[t,e,r]=this.config;if(this._svg&&this._svg.remove(),this._svg=this.appendChild(s()),!t||"none"===e)return!1;const n=e=>this._svg.appendChild(a(`${r}#${t}-${e}`));if(!u.isFromMultiplePieces(t))return n(e);const i=f(e);["back","top","front"].forEach(t=>n(i[t]))}get config(){const[t,e,r]=this.constructor.observedAttributes.map(t=>this.getAttribute(t));return[e,r,t]}nextValue(t=1){return this.setAttribute("value",u.getNextPartName(this.getAttribute("type"),this.getAttribute("value"),t))}}return customElements.define(p.tag_name,p),{}}();